#!/bin/bash
set -e

# ------------------------
# Variables
# ------------------------
POD_NETWORK_CIDR="192.168.0.0/16"

echo "[Step 1] Update system"
sudo dnf update -y

echo "[Step 2] Disable swap"
sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

echo "[Step 3] Install containerd"
sudo dnf install -y containerd
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo systemctl enable --now containerd

echo "[Step 4] Add Kubernetes repo"
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
EOF

echo "[Step 5] Install kubeadm, kubelet, kubectl"
sudo dnf install -y kubelet kubeadm kubectl
sudo systemctl enable --now kubelet

echo "[Step 6] Initialize Kubernetes control plane"
sudo kubeadm init \
  --pod-network-cidr=${POD_NETWORK_CIDR} \
  --apiserver-advertise-address=$(hostname -I | awk '{print $1}')

echo "[Step 7] Configure kubectl for ec2-user"
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

echo "[Step 8] Install Calico CNI plugin"
kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/calico.yaml

echo "[Step 9] Allow master to schedule workloads"
kubectl taint nodes --all node-role.kubernetes.io/control-plane-

echo "[Step 10] Verify cluster"
kubectl get nodes -o wide
kubectl get pods -A

echo "âœ… Kubernetes single-node cluster setup complete on Amazon Linux 2023."
echo "You can now deploy your webapp."

--------

#!/bin/bash
set -e

echo "Stopping kubelet and containerd..."
sudo systemctl stop kubelet
sudo systemctl stop containerd || echo "containerd not running, skipping"

echo "Resetting kubeadm..."
sudo kubeadm reset -f

echo "Removing leftover CNI configs, manifests, etcd data, and kubeconfig..."
sudo rm -rf /etc/cni/net.d /etc/kubernetes/manifests /var/lib/etcd $HOME/.kube

echo "Flushing iptables..."
sudo iptables -F
sudo iptables -t nat -F
sudo iptables -t mangle -F
sudo iptables -X

echo "Starting containerd and kubelet..."
sudo systemctl start containerd
sudo systemctl enable containerd
sudo systemctl start kubelet
sudo systemctl enable kubelet

echo "Initializing Kubernetes control plane..."
sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all

echo "Setting up kubeconfig for ec2-user..."
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

echo "Applying Flannel CNI..."
kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

echo "Kubernetes init complete. Check nodes with:"
echo "kubectl get nodes --watch"

